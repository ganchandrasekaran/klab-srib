apiVersion: v1
kind: Namespace

metadata:
  name: kubernetes-web-view

---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: kubernetes-web-view
  namespace: kubernetes-web-view

spec:
  replicas: 1
  selector:
    matchLabels:
      application: kubernetes-web-view
  template:
    metadata:
      labels:
        application: kubernetes-web-view
    spec:
      serviceAccountName: kubernetes-web-view
      containers:
      - name: kubernetes-web-view
        # see https://codeberg.org/hjacobs/kube-web-view/releases
        image: hjacobs/kube-web-view:$KUBERNETES_WEB_VIEW_VERSION
        args:
        - --port=8080
        - --show-container-logs
        - --show-secrets
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 5m
            memory: 100Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000

---

kind: Service
apiVersion: v1

metadata:
  name: kubernetes-web-view
  namespace: kubernetes-web-view

spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: $NODE_PORT
  selector:
    application: kubernetes-web-view

---

apiVersion: v1
kind: ServiceAccount

metadata:
  name: kubernetes-web-view
  namespace: kubernetes-web-view

secrets:
- name: kubernetes-web-view

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding

metadata:
  name: kubernetes-web-view
  namespace: kubernetes-web-view

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-web-view
  namespace: kubernetes-web-view

---

apiVersion: v1
kind: Secret

metadata:
  name: kubernetes-web-view
  namespace: kubernetes-web-view
  annotations:
    kubernetes.io/service-account.name: kubernetes-web-view # required

type: kubernetes.io/service-account-token
