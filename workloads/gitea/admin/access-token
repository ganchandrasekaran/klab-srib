#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/../../../library/_env"

USERNAME=$1
PASSWORD=$2

if [ ! -f "$HERE/tokens/$USERNAME" ]; then
    mkdir --parents "$HERE/tokens/"

	# Unfortunately this inconsistently spits out logs stdout, making it challenging to parse
    # "$HERE/gitea" admin user generate-access-token --username "$USERNAME" --raw | tail -1 > "$HERE/tokens/$USERNAME"

	# See: https://docs.gitea.io/en-us/api-usage/#generating-and-listing-api-tokens

	. "$HERE/../_env"

	# Delete old "klab" token
	kubectl exec gitea-0 --container=gitea --namespace=gitea --quiet -- \
    curl --silent --fail \
        "http://localhost:3000/api/v1/users/$USERNAME/tokens/klab" \
		--user "$USERNAME:$PASSWORD" \
		--request DELETE \
        --header 'Accept: application/json' || true

	# Create new "klab" token
	# (this is our only chance to retrieve the sha1)
	kubectl exec gitea-0 --container=gitea --namespace=gitea --quiet -- \
    curl --silent --fail \
        "http://localhost:3000/api/v1/users/$USERNAME/tokens" \
		--user "$USERNAME:$PASSWORD" \
		--request POST \
        --header 'Accept: application/json' \
        --header 'Content-Type: application/json' \
		--data '{"name": "klab"}' | jq --raw-output .sha1 > "$HERE/tokens/$USERNAME"
fi

cat "$HERE/tokens/$USERNAME"
