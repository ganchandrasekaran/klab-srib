#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/../../library/_env"
. "$ROOT/library/_trap"

# https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/

CLUSTER=$1

SECURE=${SECURE:-true}
NODE_PORT=${NODE_PORT:-30000}

if [ "$SECURE" == true ]; then
	PORT=443
	TARGET_PORT=8443
else
	PORT=80
	TARGET_PORT=9090
fi

if [ ! -f "$HERE/work/dashboard.yaml" ]; then
	mkdir --parents "$HERE/work/"
	curl "https://raw.githubusercontent.com/kubernetes/dashboard/v$KUBERNETES_DASHBOARD_VERSION/aio/deploy/recommended.yaml" --output "$HERE/work/dashboard.yaml"
fi

cp "$HERE/work/dashboard.yaml" "$HERE/work/$CLUSTER.yaml"

# Use HTTP node port
# See: https://computingforgeeks.com/how-to-install-kubernetes-dashboard-with-nodeport/
replace_text "$HERE/work/$CLUSTER.yaml" 40 42 \
"  type: NodePort
  ports:
    - targetPort: $TARGET_PORT
      port: $PORT
      nodePort: $NODE_PORT"

# Configure cluster name (seen in web browser title)
# Note: we need the *entire* configuration here, see https://github.com/kubernetes/dashboard/issues/7612
insert_text "$HERE/work/$CLUSTER.yaml" 92 \
"data:
  _global: '{\"clusterName\":\"$CLUSTER\",\"itemsPerPage\":10,\"labelsLimit\":3,\"logsAutoRefreshTimeInterval\":5,\"resourceAutoRefreshTimeInterval\":5,\"disableAccessDeniedNotifications\":false,\"defaultNamespace\":\"default\",\"namespaceFallbackList\":[\"default\"]}'"

if [ "$SECURE" == true ]; then
	# See: https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md
	cat "$HERE/assets/user-admin.yaml" >> "$HERE/work/$CLUSTER.yaml"
else
	# Enable HTTP and skip authentication
	# See: https://github.com/kubernetes/dashboard/blob/master/docs/common/dashboard-arguments.md
	replace_text "$HERE/work/$CLUSTER.yaml" 203 203 \
"            - --insecure-bind-address=0.0.0.0
            - --enable-skip-login
            - --disable-settings-authorizer"

	# Add "cluster-admin" permissions to "kubernetes-dashboard"" serviceaccount
	# See: https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md#admin-privileges
	cat "$HERE/assets/user-kubernetes-dashboard.yaml" >> "$HERE/work/$CLUSTER.yaml"
fi

kubectl apply -f "$HERE/work/$CLUSTER.yaml"

if [ "$SECURE" == true ]; then
	m "admin token (from \"$HERE/admin-token\"):"
	"$HERE/admin-token"
fi
